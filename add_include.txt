Solicitud del usuario
- "Agrega esa credencial" para que el guardado del Modo desarrollador funcione, y crea un .txt explicando el hallazgo, el cambio aplicado y mi solicitud.

Resumen del problema detectado
- El guardado desde el editor (Modo desarrollador) hacía `PUT /api/content` SIN enviar la cookie de sesión admin.
- El servidor exige autenticación por cookie (`admin_session`) para `PUT /api/content` (`server/editor-server.js:60-63`, `151`).
- Resultado: el guardado fallaba con 401/403 y el editor mostraba el mensaje de error.

Por qué ocurría
- En `scripts/editor.js`, la función `saveContent()` usaba `fetch('/api/content', { ... })` sin `credentials: 'include'`.
- Aunque el login sí incluía credenciales (`scripts/app.js:263-267`), el guardado no las enviaba, por lo que el backend no reconocía la sesión admin.

Cambio aplicado (mínimo y puntual)
- Archivo: `scripts/editor.js`
- Función: `saveContent()`
- Modificación: agregar `credentials: 'include'` al `fetch` del guardado.

Antes:
fetch('/api/content', {
  method: 'PUT',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify(editorState.site, null, 2)
});

Después:
fetch('/api/content', {
  method: 'PUT',
  headers: { 'Content-Type': 'application/json' },
  credentials: 'include',
  body: JSON.stringify(editorState.site, null, 2)
});

Impacto esperado
- El editor ahora enviará la cookie de sesión admin al guardar y el servidor aceptará la escritura de `data/site-content.json`.

Notas de entorno
- Asegurarse de:
  - Usar la web en `https://www.elpelasorteos.shop` (cookie `secure` en producción).
  - Mantenerte en `www` (Caddy redirige apex a `www`).
  - Variables `.env` configuradas en el servidor: `ADMIN_USER`, `ADMIN_PASS`, `ADMIN_JWT_SECRET`.

Verificación rápida
- Iniciar sesión desde el modal.
- Editar algo en el editor y presionar “Guardar cambios”.
- Ver en DevTools > Network que el `PUT /api/content` ahora devuelve 200 y envía la cookie.

