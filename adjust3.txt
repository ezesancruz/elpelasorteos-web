1) Carrusel 9:16 (solo esta tarjeta)
Archivos y puntos a intervenir

web/scripts/editor.js

Bloque del tipo de tarjeta carruselImagenes (buscá “carruselImagenes(section, index)”): ya invoca el campo de imagen con aspect 9/16. Mantenerlo ahí, solo para carrusel.

openImageCropper (buscá la función): confirma recortes devolviendo { zoom, offsetX, offsetY, aspect } + thumb. Está correcto para 9:16.

ensureCropperOverlay: ya crea el modal con Cancelar y Aplicar. Asegurate de que el overlay siempre abra con aspect=9/16 cuando venga del carrusel, y que el preview del modal use la misma relación (ya lo hace con previewCanvas.height = round(width/aspect)).

web/scripts/app.js

renderImageCarouselSection: crea cada ítem del carrusel con createImg(...). Debe respetar el crop 9:16 de cada imagen (ver punto de “createImg” abajo).

createImg → applyImageDisplay: acá se traduce el crop (zoom y offsets) a estilos del <img>. Es el corazón del “se ve distinto en la tarjeta que en el modal”.

Helpers: normalizeCropDescriptor, resolveObjectPosition, resolveLegacyTransform. Asegurate de que el flujo prefiera el crop { zoom, offsetX, offsetY, aspect } (y no se mezcle con modos alternativos si el objeto trae metadatos viejos).

web/styles/main.css

Sección .section--imageCarousel .carousel y .carousel__item ya fija aspect-ratio: 9/16. Mantener.

Bloques [data-img-frame] y variantes: ahí se decide object-fit y cómo interactúa con transform.

Ajustes funcionales (lo que debe cambiar)

Solo carrusel = 9:16 fijo

El modal de recorte debe abrir siempre en 9:16 para esta tarjeta y guardar crop.aspect = 9/16.

El panel lateral del editor debe mostrar la miniatura 9:16 (el thumb) del tamaño reducido, pero proporcional.

Miniatura del modal = resultado final

Lo que ves en la miniatura del modal debe ser idéntico a lo que se ve luego en:

la previa del panel (thumb), y

el ítem del carrusel en la página.

Si ves desajuste, la causa está en cómo applyImageDisplay aplica zoom/offset vs. cómo el modal calcula baseScale*zoom.

Sin “doble recorte”

Cuando applyImageDisplay usa el modo legacy-transform (lo hace con { zoom, offsetX, offsetY }), asegurate de que no quede activo a la vez un object-fit: cover heredado que “recorte por segunda vez”.

Criterio: si se usa legacy-transform para posicionar/zoomear, el object-fit debe quedar neutral (no recorte adicional). Esto se resuelve en CSS con una regla específica para [data-crop-mode="legacy-transform"].

Salida y persistencia por imagen

Cada imagen del carrusel guarda dos cosas:

crop (zoom, offsets, aspect 9:16) para poder re-editar.

thumb 9:16 para la previa del editor (rápida, ligera, proporcional).

El render público del carrusel no debe depender del archivo original si el thumb no es suficiente: usa el src original + crop para pantalla; thumb solo para editor.

QA visual

Ítems del carrusel alineados, sin “aplastes” ni bordes raros.

Al recargar la página, el carrusel mantiene exactamente la misma composición que se eligió en el crop.